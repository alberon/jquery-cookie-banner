{"version":3,"sources":["src/cookie-banner.js"],"names":["$","fn","cookieBanner","opts","CookieBanner","this","click","navigator","userAgent","match","options","extend","animate","close","cookie","name","text","value","link","url","testMode","initialise","removeCookie","alreadyConfirmed","render","renderBanner","class","id","append","renderLink","renderCloser","attr","href","target","on","closeAndAccept","addClass","removeClass","find","remove","e","cookieOpts","path","expires","domain","secure","Cookies","set","get","jQuery"],"mappings":"CAAA,SAAAA,GACA,YAeAA,GAAAC,GAAAC,aAAA,SAAAC,GACA,GAAAC,GAAAC,KACAC,EAAAC,UAAAC,UAAAC,MAAA,SAAA,aAAA,OA8JA,OA5JAJ,MAAAK,QAAAV,EAAAW,QAAA,GACAC,SACAC,OAAA,GAEAC,QACAC,KAAA,yBACAC,KAAA,iBACAC,OAAA,GAEAC,MACAC,IAAA,iBACAH,KAAA,mBAEAA,KAAA,0GAEAI,UAAA,GACAjB,GAKAE,KAAAgB,WAAA,WACAjB,EAAAM,QAAAU,UACAhB,EAAAkB,eAEAlB,EAAAmB,oBACAnB,EAAAoB,UAUAnB,KAAAoB,aAAA,WACA,MAAAzB,GAAA,WACA0B,MAAA,gBACAC,GAAAvB,EAAAM,QAAAI,OAAAC,KACAC,KAAAZ,EAAAM,QAAAM,OACAY,OAAAxB,EAAAyB,cACAD,OAAAxB,EAAA0B,iBAQAzB,KAAAwB,WAAA,WACA,MAAA7B,GAAA,SACA+B,MACAC,KAAA5B,EAAAM,QAAAQ,KAAAC,IACAc,OAAA,UAEAjB,KAAAZ,EAAAM,QAAAQ,KAAAF,QAUAX,KAAAyB,aAAA,WACA,MAAA9B,GAAA,WACA0B,MAAA,eACAV,KAAAZ,EAAAM,QAAAI,OAAAE,OACAkB,GAAA5B,EAAAF,EAAA+B,iBAQA9B,KAAAmB,OAAA,WACA,MAAAxB,GAAA,QAAAoC,SAAA,wBACAR,OAAAxB,EAAAqB,iBAQApB,KAAAQ,MAAA,WACA,MAAAb,GAAA,QAAAqC,YAAA,wBACAC,KAAA,kBACAC,UASAlC,KAAA8B,eAAA,SAAAK,GACA,kBAAApC,GAAAM,QAAAE,QAAAC,MAKAT,EAAAM,QAAAE,QAAAC,MAAA2B,GAEApC,EAAAS,OAGA,IAAA4B,KAkBA,OAhBA,mBAAArC,GAAAM,QAAAI,OAAA4B,OACAD,EAAAC,KAAAtC,EAAAM,QAAAI,OAAA4B,MAGA,mBAAAtC,GAAAM,QAAAI,OAAA6B,UACAF,EAAAE,QAAAvC,EAAAM,QAAAI,OAAA6B,SAGA,mBAAAvC,GAAAM,QAAAI,OAAA8B,SACAH,EAAAG,OAAAxC,EAAAM,QAAAI,OAAA8B,QAGA,mBAAAxC,GAAAM,QAAAI,OAAA+B,SACAJ,EAAAI,OAAAzC,EAAAM,QAAAI,OAAA+B,QAGAC,QAAAC,IACA3C,EAAAM,QAAAI,OAAAC,KACAX,EAAAM,QAAAI,OAAAG,MACAwB,IASApC,KAAAkB,iBAAA,WACA,MAAAuB,SAAAE,IAAA5C,EAAAM,QAAAI,OAAAC,OAQAV,KAAAiB,aAAA,WACA,MAAAwB,SAAAP,OAAAnC,EAAAM,QAAAI,OAAAC,OAGAV,KAAAgB,aAEAhB,OAEA4C","file":"cookie-banner.min.js","sourcesContent":["(function($){\r\n    \"use strict\";\r\n\r\n    /**\r\n     * A small plugin that creates a minimalistic cookie banner\r\n     *\r\n     * author: Tony Lopez <tony@alberon.co.uk>\r\n     * licence: MIT\r\n     *\r\n     * Dependencies: [\r\n     *                  'js-cookie': https://github.com/js-cookie/js-cookie\r\n     *               ]\r\n     *\r\n     * @param opts\r\n     * @returns {jQuery}\r\n     */\r\n    $.fn.cookieBanner = function(opts){\r\n        var CookieBanner = this,\r\n            click = (navigator.userAgent.match(/iPad/i)) ? 'touchstart' : 'click';\r\n\r\n        this.options = $.extend(true, {\r\n            animate: {\r\n                close: false\r\n            },\r\n            cookie: {\r\n                name: 'accepted_cookie_policy',\r\n                text:'Accept & Close',\r\n                value: true\r\n            },\r\n            link: {\r\n                url: '/cookie-policy',\r\n                text: 'Cookies Policy.'\r\n            },\r\n            text: 'This site uses cookies to give you the best possible user ' +\r\n            'experience. To find out more please view our ',\r\n            testMode: false\r\n        }, opts);\r\n\r\n        /**\r\n         * Initialises the plugin\r\n         */\r\n        this.initialise = function(){\r\n            if(CookieBanner.options.testMode){\r\n                CookieBanner.removeCookie();\r\n            }\r\n            if(!CookieBanner.alreadyConfirmed()){\r\n                CookieBanner.render();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Render the banner using the options set when the plugin is\r\n         * initialised\r\n         *\r\n         * @returns {JQuery}\r\n         */\r\n        this.renderBanner = function(){\r\n            return $('<div />', {\r\n                class: 'cookie-banner',\r\n                id: CookieBanner.options.cookie.name,\r\n                text: CookieBanner.options.text\r\n            }).append(CookieBanner.renderLink())\r\n              .append(CookieBanner.renderCloser());\r\n        };\r\n\r\n        /**\r\n         * Render the link using the options set when the plugin is initialised\r\n         *\r\n         * @returns {JQuery|HTMLElement}\r\n         */\r\n        this.renderLink = function(){\r\n            return $('<a />', {\r\n                attr: {\r\n                    href: CookieBanner.options.link.url,\r\n                    target: '_blank'\r\n                },\r\n                text: CookieBanner.options.link.text\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Render the close button using the options set when the plugin is\r\n         * initialised\r\n         *\r\n         * @returns {JQuery}\r\n         */\r\n        this.renderCloser = function(){\r\n            return $('<div />', {\r\n                class: 'cookie-close',\r\n                text: CookieBanner.options.cookie.text\r\n            }).on(click, CookieBanner.closeAndAccept);\r\n        };\r\n\r\n        /**\r\n         * Append the banner to the body\r\n         *\r\n         * @returns {JQuery}\r\n         */\r\n        this.render = function(){\r\n            return $('body').addClass('cookie-banner-active')\r\n                            .append(CookieBanner.renderBanner());\r\n        };\r\n\r\n        /**\r\n         * A basic removal for the banner to close it\r\n         *\r\n         * @returns {JQuery}\r\n         */\r\n        this.close = function(){\r\n            return $('body').removeClass('cookie-banner-active')\r\n                            .find('.cookie-banner')\r\n                            .remove();\r\n        };\r\n\r\n        /**\r\n         * Set a cookie and close the banner\r\n         *\r\n         * @param e\r\n         * @returns {*} Cookies set response\r\n         */\r\n        this.closeAndAccept = function(e){\r\n            if(typeof CookieBanner.options.animate.close === 'function'){\r\n                /**\r\n                 * Note: This is a blank function, so handle the removal of the\r\n                 * cookie banner in your own code\r\n                 */\r\n                CookieBanner.options.animate.close(e);\r\n            } else {\r\n                CookieBanner.close();\r\n            }\r\n\r\n            var cookieOpts = {};\r\n\r\n            if(typeof CookieBanner.options.cookie.path !== 'undefined'){\r\n                cookieOpts.path = CookieBanner.options.cookie.path;\r\n            }\r\n\r\n            if(typeof CookieBanner.options.cookie.expires !== 'undefined'){\r\n                cookieOpts.expires = CookieBanner.options.cookie.expires;\r\n            }\r\n\r\n            if(typeof CookieBanner.options.cookie.domain !== 'undefined'){\r\n                cookieOpts.domain = CookieBanner.options.cookie.domain;\r\n            }\r\n\r\n            if(typeof CookieBanner.options.cookie.secure !== 'undefined'){\r\n                cookieOpts.secure = CookieBanner.options.cookie.secure;\r\n            }\r\n\r\n            return Cookies.set(\r\n                CookieBanner.options.cookie.name,\r\n                CookieBanner.options.cookie.value,\r\n                cookieOpts\r\n            );\r\n        };\r\n\r\n        /**\r\n         * Test if the cookie is already set\r\n         *\r\n         * @returns {*}\r\n         */\r\n        this.alreadyConfirmed = function(){\r\n            return Cookies.get(CookieBanner.options.cookie.name);\r\n        };\r\n\r\n        /**\r\n         * Remove the cookie - Useful for testing\r\n         *\r\n         * @returns {*}\r\n         */\r\n        this.removeCookie = function(){\r\n            return Cookies.remove(CookieBanner.options.cookie.name);\r\n        };\r\n\r\n        this.initialise();\r\n\r\n        return this;\r\n    };\r\n})(jQuery);\r\n"]}